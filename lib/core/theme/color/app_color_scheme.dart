import 'package:flutter/material.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

part 'app_color_scheme.freezed.dart';

typedef MaterialColorScheme = ColorScheme;

@freezed
class AppColorScheme with _$AppColorScheme {
  factory AppColorScheme({
    required Brightness brightness,
    required Color primary,
    required Color onPrimary,
    required Color primaryContainer,
    required Color onPrimaryContainer,
    required Color primaryFixed,
    required Color primaryFixedDim,
    required Color onPrimaryFixed,
    required Color onPrimaryFixedVariant,
    required Color secondary,
    required Color onSecondary,
    required Color secondaryContainer,
    required Color onSecondaryContainer,
    required Color secondaryFixed,
    required Color secondaryFixedDim,
    required Color onSecondaryFixed,
    required Color onSecondaryFixedVariant,
    required Color tertiary,
    required Color onTertiary,
    required Color tertiaryContainer,
    required Color onTertiaryContainer,
    required Color tertiaryFixed,
    required Color tertiaryFixedDim,
    required Color onTertiaryFixed,
    required Color onTertiaryFixedVariant,
    required Color error,
    required Color onError,
    required Color errorContainer,
    required Color surface,
    required Color onSurface,
    required Color surfaceDim,
    required Color surfaceBright,
    required Color surfaceContainerLowest,
    required Color surfaceContainerLow,
    required Color surfaceContainer,
    required Color surfaceContainerHigh,
    required Color surfaceContainerHighest,
    required Color onSurfaceVariant,
    required Color outline,
    required Color outlineVariant,
    required Color shadow,
    required Color scrim,
    required Color inverseSurface,
    required Color onInverseSurface,
    required Color inversePrimary,
    required Color surfaceTint,
    required Color disabled,
    required Color onDisabled,
  }) = _AppColorScheme;

  factory AppColorScheme.fromMaterialColorScheme(
    ColorScheme colorScheme, {
    required Color disabled,
    required Color onDisabled,
  }) =>
      AppColorScheme(
        brightness: colorScheme.brightness,
        primary: colorScheme.primary,
        onPrimary: colorScheme.onPrimary,
        primaryContainer: colorScheme.primaryContainer,
        onPrimaryContainer: colorScheme.onPrimaryContainer,
        primaryFixed: colorScheme.primaryFixed,
        primaryFixedDim: colorScheme.primaryFixedDim,
        onPrimaryFixed: colorScheme.onPrimaryFixed,
        onPrimaryFixedVariant: colorScheme.onPrimaryFixedVariant,
        secondary: colorScheme.secondary,
        onSecondary: colorScheme.onSecondary,
        secondaryContainer: colorScheme.secondaryContainer,
        onSecondaryContainer: colorScheme.onSecondaryContainer,
        secondaryFixed: colorScheme.secondaryFixed,
        secondaryFixedDim: colorScheme.secondaryFixedDim,
        onSecondaryFixed: colorScheme.onSecondaryFixed,
        onSecondaryFixedVariant: colorScheme.onSecondaryFixedVariant,
        tertiary: colorScheme.tertiary,
        onTertiary: colorScheme.onTertiary,
        tertiaryContainer: colorScheme.tertiaryContainer,
        onTertiaryContainer: colorScheme.onTertiaryContainer,
        tertiaryFixed: colorScheme.tertiaryFixed,
        tertiaryFixedDim: colorScheme.tertiaryFixedDim,
        onTertiaryFixed: colorScheme.onTertiaryFixed,
        onTertiaryFixedVariant: colorScheme.onTertiaryFixedVariant,
        error: colorScheme.error,
        onError: colorScheme.onError,
        errorContainer: colorScheme.errorContainer,
        surface: colorScheme.surface,
        onSurface: colorScheme.onSurface,
        surfaceDim: colorScheme.surfaceDim,
        surfaceBright: colorScheme.surfaceBright,
        surfaceContainerLowest: colorScheme.surfaceContainerLowest,
        surfaceContainerLow: colorScheme.surfaceContainerLow,
        surfaceContainer: colorScheme.surfaceContainer,
        surfaceContainerHigh: colorScheme.surfaceContainerHigh,
        surfaceContainerHighest: colorScheme.surfaceContainerHighest,
        onSurfaceVariant: colorScheme.onSurfaceVariant,
        outline: colorScheme.outline,
        outlineVariant: colorScheme.outlineVariant,
        shadow: colorScheme.shadow,
        scrim: colorScheme.scrim,
        inverseSurface: colorScheme.inverseSurface,
        onInverseSurface: colorScheme.onInverseSurface,
        inversePrimary: colorScheme.inversePrimary,
        surfaceTint: colorScheme.surfaceTint,
        disabled: disabled,
        onDisabled: onDisabled,
      );

  const AppColorScheme._();

  MaterialColorScheme get materialColorScheme => MaterialColorScheme(
        brightness: brightness,
        primary: primary,
        onPrimary: onPrimary,
        primaryContainer: primaryContainer,
        onPrimaryContainer: onPrimaryContainer,
        primaryFixed: primaryFixed,
        primaryFixedDim: primaryFixedDim,
        onPrimaryFixed: onPrimaryFixed,
        onPrimaryFixedVariant: onPrimaryFixedVariant,
        secondary: secondary,
        onSecondary: onSecondary,
        secondaryContainer: secondaryContainer,
        onSecondaryContainer: onSecondaryContainer,
        secondaryFixed: secondaryFixed,
        secondaryFixedDim: secondaryFixedDim,
        onSecondaryFixed: onSecondaryFixed,
        onSecondaryFixedVariant: onSecondaryFixedVariant,
        tertiary: tertiary,
        onTertiary: onTertiary,
        tertiaryContainer: tertiaryContainer,
        onTertiaryContainer: onTertiaryContainer,
        tertiaryFixed: tertiaryFixed,
        tertiaryFixedDim: tertiaryFixedDim,
        onTertiaryFixed: onTertiaryFixed,
        onTertiaryFixedVariant: onTertiaryFixedVariant,
        error: error,
        onError: onError,
        errorContainer: errorContainer,
        surface: surface,
        onSurface: onSurface,
        surfaceDim: surfaceDim,
        surfaceBright: surfaceBright,
        surfaceContainerLowest: surfaceContainerLowest,
        surfaceContainerLow: surfaceContainerLow,
        surfaceContainer: surfaceContainer,
        surfaceContainerHigh: surfaceContainerHigh,
        surfaceContainerHighest: surfaceContainerHighest,
        onSurfaceVariant: onSurfaceVariant,
        outline: outline,
        outlineVariant: outlineVariant,
        shadow: shadow,
        scrim: scrim,
        inverseSurface: inverseSurface,
        onInverseSurface: onInverseSurface,
        inversePrimary: inversePrimary,
        surfaceTint: surfaceTint,
      );
}
